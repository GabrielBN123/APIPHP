{
    "openapi": "3.0.0",
    "info": {
        "title": "API SELETIVO",
        "version": "0.1"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Autenticação"
                ],
                "summary": "Atutenticar usuário",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "test@example.com"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "123456789a"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Autenticação"
                ],
                "summary": "Logout",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Autenticação"
                ],
                "summary": "Renovar Token",
                "operationId": "2c27d311a2876560fcb5a754b556cdc5",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "test@example.com"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "123456789a"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cidade": {
            "get": {
                "tags": [
                    "Cidade"
                ],
                "summary": "GET cidades",
                "description": "GET Paginado",
                "operationId": "1eec1560cb76079fb0c015e722618860",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page Number",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/store-cidade": {
            "get": {
                "tags": [
                    "Cidade"
                ],
                "summary": "GET pessoas",
                "description": "GET Paginado",
                "operationId": "cf0f8a72991fad2e7a7a377b4f9e802d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page Number",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/fotos/upload/{pes_id}": {
            "post": {
                "tags": [
                    "FotoPessoa"
                ],
                "summary": "Enviar foto",
                "description": "Endpoint enviar foto de usuário, vinculando ao mesmo.",
                "operationId": "79d0605bb2e3505ef4deecfd89a9aac6",
                "parameters": [
                    {
                        "name": "pes_id",
                        "in": "path",
                        "description": "ID da pessoa",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "foto": {
                                        "description": "Arquivo de foto (imagem)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Foto enviada com sucesso!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Foto enviada com sucesso!"
                                        },
                                        "data": {
                                            "properties": {
                                                "documento_url": {
                                                    "type": "string",
                                                    "example": "https://seuservidor.com/uploads/documento.pdf"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erro na requisição"
                    }
                }
            }
        },
        "/api/get-foto/{pes_id}": {
            "get": {
                "tags": [
                    "FotoPessoa"
                ],
                "summary": "Trazer foto do usuário com link temporário",
                "description": "Endpoint retornar link temporário da foto do usuário",
                "operationId": "ff28760751d477f41cc3d89ddc27f71a",
                "parameters": [
                    {
                        "name": "pes_id",
                        "in": "path",
                        "description": "ID da pessoa",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Foto encontrada com sucesso!"
                    },
                    "400": {
                        "description": "Erro na requisição"
                    }
                }
            }
        },
        "/api/pessoa": {
            "get": {
                "tags": [
                    "Pessoa"
                ],
                "summary": "GET pessoas",
                "description": "GET Paginado",
                "operationId": "4eb689bcbe5071889ed99546f6e47b9d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page Number",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/store-pessoa": {
            "post": {
                "tags": [
                    "Pessoa"
                ],
                "summary": "Cria uma nova pessoa",
                "description": "Endpoint para criar uma nova pessoa no sistema.",
                "operationId": "94365da72907510500961909ec9cffaf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pes_id",
                                    "pes_nome",
                                    "pes_data_nascimento",
                                    "pes_sexo"
                                ],
                                "properties": {
                                    "pes_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pes_nome": {
                                        "type": "string",
                                        "example": "João Silva"
                                    },
                                    "pes_data_nascimento": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-05-15"
                                    },
                                    "pes_sexo": {
                                        "type": "string",
                                        "example": "M"
                                    },
                                    "pes_mae": {
                                        "type": "string",
                                        "example": "Maria Silva"
                                    },
                                    "pes_pai": {
                                        "type": "string",
                                        "example": "José Silva"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pessoa criada com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pessoa criada com sucesso"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erro na validação dos dados",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erro de validação"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/show-pessoa/{pes_id}": {
            "get": {
                "tags": [
                    "Pessoa"
                ],
                "summary": "Show Pessoa",
                "description": "Show Pessoa",
                "operationId": "1dee2c0828e52c8c6a49672eedb091aa",
                "parameters": [
                    {
                        "name": "pes_id",
                        "in": "path",
                        "description": "ID da pessoa",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pessoa Encontrada",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Pessoa não encontrada"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-pessoa/{pes_id}": {
            "put": {
                "tags": [
                    "Pessoa"
                ],
                "summary": "Atualizar ou criar uma pessoa",
                "description": "Endpoint para atualizar ou criar uma nova pessoa",
                "operationId": "8fb74128903d30b4df36395b90baee26",
                "parameters": [
                    {
                        "name": "pes_id",
                        "in": "path",
                        "description": "ID da pessoa",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pes_nome": {
                                        "type": "string",
                                        "example": "João Silva"
                                    },
                                    "pes_data_nascimento": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-05-15"
                                    },
                                    "pes_sexo": {
                                        "type": "string",
                                        "example": "M"
                                    },
                                    "pes_mae": {
                                        "type": "string",
                                        "example": "Maria Silva"
                                    },
                                    "pes_pai": {
                                        "type": "string",
                                        "example": "José Silva"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pessoa atualizada com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pessoa atualizada com sucesso"
                                        },
                                        "data": {
                                            "properties": {
                                                "pes_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pes_nome": {
                                                    "type": "string",
                                                    "example": "João Silva Santos"
                                                },
                                                "pes_data_nascimento": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2000-05-15"
                                                },
                                                "pes_sexo": {
                                                    "type": "string",
                                                    "example": "M"
                                                },
                                                "pes_mae": {
                                                    "type": "string",
                                                    "example": "Maria Silva"
                                                },
                                                "pes_pai": {
                                                    "type": "string",
                                                    "example": "José Silva"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erro na requisição"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete-pessoa/{pes_id}": {
            "delete": {
                "tags": [
                    "Pessoa"
                ],
                "summary": "Deleta Pessoa",
                "description": "Remove Pessoa",
                "operationId": "a956e228e720b68ae541f62ee8eb75b4",
                "parameters": [
                    {
                        "name": "pes_id",
                        "in": "path",
                        "description": "ID da pessoa",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pessoa Encontrada",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Pessoa não encontrada"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Autenticação",
            "description": "Autenticação"
        },
        {
            "name": "Cidade",
            "description": "Cidade"
        },
        {
            "name": "FotoPessoa",
            "description": "FotoPessoa"
        },
        {
            "name": "Pessoa",
            "description": "Pessoa"
        }
    ]
}